{"version":3,"file":"search-CY-f8z7W.js","sources":["../../../../../src/routes/search.tsx?tsr-split=component"],"sourcesContent":["import { createFileRoute } from \"@tanstack/react-router\";\nimport { createServerFn } from \"@tanstack/react-start\";\nimport { SEARCH_MOVIES } from \"../graphql/queries\";\n\nexport const searchMoviesFn = createServerFn({ method: \"GET\" })\n  .validator((d: { query: string }) => d)\n  .handler(async ({ data }) => {\n    const { query } = data;\n\n    if (!query || query.trim().length < 2) {\n      return [];\n    }\n\n    try {\n      // Send GraphQL query to your local GraphQL server\n      const response = await fetch(\"http://localhost:4000/graphql\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          query: SEARCH_MOVIES,\n          variables: { query: query.trim() },\n        }),\n      });\n\n      const result = await response.json();\n\n      if (result.errors) {\n        console.error(\"GraphQL errors:\", result.errors);\n        return [];\n      }\n\n      return result.data?.searchMovies || [];\n    } catch (error) {\n      console.error(\"Search failed:\", error);\n      return [];\n    }\n  });\n\nexport const Route = createFileRoute(\"/search\")({\n  component: () => null, // This route doesn't render anything\n});\n"],"names":["SplitComponent"],"mappings":"oWAyCaA,MAAAA,EAAAA,IAAM"}